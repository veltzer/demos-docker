services:
  # https://github.com/docker-library/docs/blob/master/postgres/README.md
  postgres:
    image: postgres:latest
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: db_password
    volumes:
      - "postgres_data:/var/lib/postgresql/data"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # https://github.com/docker-library/docs/tree/master/adminer
  adminer:
    image: adminer
    restart: unless-stopped
    environment:
      # ADMINER_DATA: purge
      ADMINER_ROOT: postgres
      ADMINER_DEFAULT_SERVER: postgres
      DATABASE_URL: postgresql://postgres:db_password@postgres:5432/postgres
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  # https://postgrest.org/en/v12/explanations/install.html#docker
  postgrest:
    image: postgrest/postgrest
    restart: unless-stopped
    ports:
      - "3001:3001"
    volumes:
      - ./postgrest.conf:/app/config.ron
    environment:
      PGRST_DB_URI: postgres://postgres:db_password@postgres:5432/postgres
      PGRST_SERVER_PORT: 3001
      # PGRST_OPENAPI_SERVER_PROXY_URI: http://127.0.0.1:3001
      PGRST_DB_ANON_ROLE: "postgres"
      PGRST_SERVER_CORS_ALLOWED_ORIGINS: "Y"
    depends_on:
      - postgres

  # https://hub.docker.com/r/swaggerapi/swagger-ui
  swagger:
    image: swaggerapi/swagger-ui
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      API_URL: http://postgrest:3001/
    depends_on:
      - postgrest
      - postgres

  node:
    build:
      context: app
      dockerfile: Dockerfile
    image: app:latest
    restart: unless-stopped
    environment:
      PORT: "3000"
      HOST: "localhost"
      db_type: "postgres"
      db_dialect: "postgres"
      db_name: "postgres"
      db_user: "postgres"
      db_password: "db_password"
      db_port: "5432"
      db_host: "postgres"
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
